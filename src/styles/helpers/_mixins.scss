@mixin arrow($size: 10px, $bg: #fff, $border-color: #d9d9d9, $left: auto, $right: auto, $arrow-margin-bottom: -1px) {
  &:after,
  &:before {
    bottom: 100%;
    border: solid transparent;
    content: '';
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    margin-bottom: $arrow-margin-bottom;
  }

  &:after {
    border-color: transparent;
    border-bottom-color: $bg;
    border-width: $size;
    margin-left: -$size;
  }
  &:before {
    right: $right;
    left: $left;
    border-color: transparent;
    border-bottom-color: $border-color;
    border-width: $size + 1;
    margin-left: -($size + 1);
  }

  @if $left != auto {
    &:after {
      left: $left + 1;
    }
  }
  @else {
    &:after {
      right: $right + 1;
    }
  }
}

@mixin clearfix() {
  &:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
  & { display: inline-block; }
  /* start commented backslash hack \*/
  & { display: block; }
  /* close commented backslash hack */
}

// Layout
$xl-min: 1280px;
$lg-max: ($xl-min - 1);
$lg-min: 1024px;
$md-max: ($lg-min - 1);
$md-min: 768px;
$sm-max: ($md-min - 1);
$sm-min: 568px;

@mixin bp($size) {
  @if $size == xl {
    @media (min-width: $xl-min) { @content ; }
  }
  @else if $size == lg {
    @media (min-width: $lg-min) { @content ; }
  }
  @else if $size == md {
    @media (min-width: $md-min) { @content ; }
  }
  @else if $size == sm {
    @media (min-width: $sm-min) { @content ; }
  }
}

@mixin gradient-circle($color: #fff, $spacing: 50%) {
  background: -moz-radial-gradient(center, ellipse cover,  rgba($color,1) 0%, rgba($color,0) $spacing, rgba($color,0) 100%);
  background: -webkit-radial-gradient(center, ellipse cover,  rgba($color,1) 0%,rgba($color,0) $spacing,rgba($color,0) 100%);
  background: radial-gradient(ellipse at center,  rgba($color,1) 0%,rgba($color,0) $spacing,rgba($color,0) 100%);
}

@mixin block($display: block) {
  @if $display == absolute {
    position: absolute;
    display: block;
  }
  @else if $display == inline or $display == inline-block {
    position: relative;
    display: inline-block;
  }
  @else {
    position: relative;
    display: block;
  }
}

@mixin vert-center($position: absolute) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color: $color;
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}
